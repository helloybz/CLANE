{"version":3,"sources":["component/Header/Header.js","component/Body/Body.js","component/Plot/Plot.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["Header","theme","useTheme","Grid","container","alignItems","sx","bgcolor","palette","mode","padding","borderBottom","borderBottomColor","item","xs","Button","href","className","border","borderColor","Typography","variant","size","startIcon","GitHub","component","Body","Plot","Slider","width","height","chartType","loader","data","options","legend","chartArea","backgroundColor","background","dark","light","colors","text","hAxis","divider","vAxis","App","bgColor","document","body","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.aa0ef8a8.chunk.js","sourcesContent":["import { Button, Grid, Typography } from \"@mui/material\";\nimport { GitHub } from \"@mui/icons-material\"\nimport './Header.css';\nimport { useTheme } from \"@mui/system\";\n\n\nexport function Header() {\n    const theme = useTheme()\n    return (\n        <Grid\n            container\n            alignItems=\"baseline\"\n            sx={{\n                bgcolor: theme.palette.mode === 'dark' ? 'background.dark' : 'background.light',\n                padding: '1rem',\n                borderBottom: 1,\n                borderBottomColor: theme.palette.mode === 'dark' ? 'divider.dark' : 'divider.light'\n            }}\n        >\n            <Grid item xs={3}>\n                <Button\n                    href=\"/\"\n                    className=\"brandButton\"\n                    sx={{\n                        border: 1,\n                        borderColor: theme.palette.mode === 'dark' ? 'divider.dark' : 'divider.light'\n                    }}\n                >\n                    <Typography variant=\"h5\">\n                        CLANE\n                    </Typography>\n                </Button>\n            </Grid>\n            <Grid item xs></Grid>\n            <Grid item xs={2}>\n                <Button\n                    href=\"https://github.com/helloybz/CLANE\"\n                    className=\"githubButton\"\n                    size=\"large\"\n                    startIcon={<GitHub />}\n                    sx={{\n                        border: 1,\n                        borderColor: theme.palette.mode === 'dark' ? 'divider.dark' : 'divider.light'\n                    }}\n                    component={Typography}\n                >\n                    Github\n                </Button>\n            </Grid>\n        </Grid >\n    )\n}","import { Grid, Slider, useTheme } from \"@mui/material\";\nimport './Body.css';\nimport { Plot } from \"../../component\"\n\n\nexport function Body() {\n    const theme = useTheme()\n    return (\n        <Grid\n            container\n            sx={{\n                bgcolor: theme.palette.mode === 'dark' ? 'background.dark' : 'background.light',\n            }}\n        >\n            <Grid item xs={8} component={Plot} />\n            <Grid item xs={4} component={Slider} />\n        </Grid>\n    )\n}","import { useTheme } from \"@mui/material\";\nimport { Chart } from \"react-google-charts\";\n\nexport function Plot() {\n    const theme = useTheme()\n\n    return (\n        <Chart\n            width={500}\n            height={500}\n            chartType=\"ScatterChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['x', 'y'],\n                [1, 1],\n                [2, 9],\n                [-3, 4],\n                [4, -7],\n                [5, 1],\n                [6, 3],\n            ]}\n            options={{\n                legend: 'none',\n                chartArea: {\n                    \"top\": 50,\n                    \"right\": 50,\n                    \"bottom\": 50,\n                    \"left\": 50\n                },\n                backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.background.dark : theme.palette.background.light,\n                colors: [theme.palette.mode === \"dark\" ? theme.palette.text.dark : theme.palette.text.light],\n                hAxis: {\n                    \"gridlines\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    },\n                    \"minorGridlines\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    },\n                    \"baseline\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    }\n\n                },\n                vAxis: {\n                    \"gridlines\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    },\n                    \"minorGridlines\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    },\n                    \"baseline\": {\n                        \"color\": theme.palette.mode === \"dark\" ? theme.palette.divider.dark : theme.palette.divider.light,\n                    }\n                }\n            }}\n        />\n\n    )\n}","import { useTheme } from \"@mui/system\";\nimport { Header, Body } from \"./component\"\n\nfunction App() {\n  const theme = useTheme()\n  const bgColor = theme.palette.mode === \"dark\" ? theme.palette.background.dark : theme.palette.background.light\n  document.body.style = 'background:' + bgColor\n\n  return (\n    <div>\n      <Header />\n      <Body />\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@mui/material\";\n\nexport const theme = createTheme({\n    palette: {\n        mode: \"dark\",\n        primary: {\n            main: \"#fff\",\n            dark: \"#fff\"\n        },\n        background: {\n            dark: \"#0D1928\"\n        },\n        text: {\n            dark: \"#fff\"\n        },\n        divider: {\n            dark: \"#1E3A5C\"\n        }\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\"\nimport { ThemeProvider } from '@mui/material';\n\nReactDOM.render(\n  < React.StrictMode >\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}