{"version":3,"sources":["components/Header/Header.js","components/Body/Body.js","components/Plot/Plot.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","sx","bgcolor","borderBottom","Toolbar","Typography","fontSize","fontWeight","color","Body","theme","useTheme","Grid","container","palette","mode","item","xs","component","Plot","Slider","width","height","chartType","loader","data","options","legend","chartArea","backgroundColor","colors","hAxis","vAxis","App","Box","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGO,SAASA,IACZ,OACI,cAAC,IAAD,UACI,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQC,GAAI,CAAEC,QAAS,kBAAmBC,aAAc,6BAAzE,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAI,CAAEK,SAAU,cAAeC,WAAY,MAAOC,MAAO,sBAArE,6B,4BCJb,SAASC,IACZ,IAAMC,EAAQC,cACd,OACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTZ,GAAI,CACAC,QAAgC,SAAvBQ,EAAMI,QAAQC,KAAkB,kBAAoB,oBAHrE,UAMI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,UAAWC,IAC7B,cAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,UAAWE,S,YCZlC,SAASD,IAEZ,OACI,cAAC,IAAD,CACIE,MAAO,IACPC,OAAQ,IACRC,UAAU,eACVC,OAAQ,gDACRC,KAAM,CACF,CAAC,IAAK,KACN,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,QAAS,CACLC,OAAQ,OACRC,UAAW,CACP,IAAO,GACP,MAAS,GACT,OAAU,GACV,KAAQ,IAEZC,gBAAiB,kBACjBC,OAAQ,CAAC,sBACTC,MAAO,CACH,UAAa,CACT,MAAS,mBAEb,eAAkB,CACd,MAAS,mBAEb,SAAY,CACR,MAAS,oBAIjBC,MAAO,CACH,UAAa,CACT,MAAS,mBAEb,eAAkB,CACd,MAAS,mBAEb,SAAY,CACR,MAAS,uBClClBC,MAXf,WACE,OACE,gCACE,cAACnC,EAAD,IACA,cAACoC,EAAA,EAAD,CAAKjC,GAAI,CAAEkC,UAAW,QAAtB,SACE,cAAC1B,EAAD,UCGO2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAE,IAAMC,WAAR,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.a05658c4.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport function Header() {\n    return (\n        <Box>\n            <AppBar position=\"fixed\" sx={{ bgcolor: 'rgb(13, 25, 40)', borderBottom: 'solid 1px rgb(24, 47, 75)' }}>\n                <Toolbar>\n                    <Typography sx={{ fontSize: 'h5.fontSize', fontWeight: '600', color: 'rgb(243, 246, 249)' }}>\n                        helloybz.\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}","import { Grid, Slider, useTheme } from \"@mui/material\";\nimport { Plot } from \"../../components\"\n\n\nexport function Body() {\n    const theme = useTheme()\n    return (\n        <Grid\n            container\n            sx={{\n                bgcolor: theme.palette.mode === 'dark' ? 'background.dark' : 'background.light',\n            }}\n        >\n            <Grid item xs={8} component={Plot} />\n            <Grid item xs={4} component={Slider} />\n        </Grid>\n    )\n}","import { Chart } from \"react-google-charts\";\n\nexport function Plot() {\n\n    return (\n        <Chart\n            width={500}\n            height={500}\n            chartType=\"ScatterChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['x', 'y'],\n                [1, 1],\n                [2, 9],\n                [-3, 4],\n                [4, -7],\n                [5, 1],\n                [6, 3],\n            ]}\n            options={{\n                legend: 'none',\n                chartArea: {\n                    \"top\": 50,\n                    \"right\": 50,\n                    \"bottom\": 50,\n                    \"left\": 50\n                },\n                backgroundColor: 'rgb(13, 25, 40)',\n                colors: ['rgb(243, 246, 249)'],\n                hAxis: {\n                    \"gridlines\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    },\n                    \"minorGridlines\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    },\n                    \"baseline\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    }\n\n                },\n                vAxis: {\n                    \"gridlines\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    },\n                    \"minorGridlines\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    },\n                    \"baseline\": {\n                        \"color\": 'rgb(24, 47, 75)',\n                    }\n                }\n            }}\n        />\n\n    )\n}","import { Box } from \"@mui/material\";\nimport { Header, Body } from \"./components\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Box sx={{ marginTop: \"6rem\" }}>\n        <Body />\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  < React.StrictMode >\n    <App />\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}